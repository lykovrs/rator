{"version":3,"sources":["components/RateChart/index.js","components/RateTable/style.js","components/RateTable/index.js","features/rate/styles.js","features/rate/rateSlice.js","constants.js","features/rate/index.js","App.js","app/store.js","index.js"],"names":["RateChart","items","data","React","useMemo","reduce","prev","curr","date","rates","fx","produce","draftState","push","Date","convert","from","to","label","axes","primary","type","position","style","width","height","overflow","tooltip","useRateTabelStyles","makeStyles","table","minWidth","SimpleTable","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","toFixed","useRateStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","fetchRateByDate","createAsyncThunk","a","fetch","result","json","rateSlice","createSlice","name","initialState","isActivePolling","currentDate","dayjs","subtract","defaultDateAmount","format","history","reducers","startPolling","state","stopPolling","togglePolling","extraReducers","pending","action","status","fulfilled","nextDate","add","payload","rejected","error","message","actions","selectCurrentDate","rate","selectRateHistory","selectRatePolling","Rate","dispatch","useDispatch","useSelector","fixedHeightPaper","clsx","useEffect","interval","setInterval","clearInterval","isAfter","CssBaseline","AppBar","Toolbar","Typography","variant","color","noWrap","IconButton","Badge","badgeContent","length","LinearProgress","Container","maxWidth","Grid","item","xs","md","lg","Button","disabled","button","onClick","App","configureStore","reducer","rateReducer","extend","isSameOrBefore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.15be734c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Chart } from \"react-charts\";\nimport produce from \"immer\";\nimport fx from \"money\";\n\n/**\n * Компонент линейного графика курса валют\n * @param items элементы для построения\n * @returns {JSX.Element}\n * @constructor\n */\nfunction RateChart({ items = [] }) {\n  const data = React.useMemo(() => {\n    return items.reduce(\n      (prev, curr) => {\n        const { date, rates } = curr;\n\n        fx.rates = rates;\n\n        return produce(prev, (draftState) => {\n          draftState[0].data.push([\n            new Date(date),\n            fx.convert(1, { from: \"EUR\", to: \"RUB\" }),\n          ]);\n          draftState[1].data.push([\n            new Date(date),\n            fx.convert(1, { from: \"USD\", to: \"RUB\" }),\n          ]);\n        });\n      },\n      [\n        {\n          label: \"USD\",\n          data: [],\n        },\n        {\n          label: \"EUR\",\n          data: [],\n        },\n      ]\n    );\n  }, [items]);\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"time\", position: \"bottom\" },\n      { type: \"linear\", position: \"left\" },\n    ],\n    []\n  );\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n      }}\n    >\n      <Chart data={data} axes={axes} tooltip />\n    </div>\n  );\n}\n\nexport default RateChart;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useRateTabelStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useRateTabelStyles } from \"./style\";\nimport fx from \"money\";\n\n/**\n * Компонет таблицы значений круса валют\n * @param items элементы для построения таблицы\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function SimpleTable({ items }) {\n  const classes = useRateTabelStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell align=\"right\">USD</TableCell>\n            <TableCell align=\"right\">EUR</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {items.map((row) => {\n            fx.rates = row.rates;\n\n            return (\n              <TableRow key={row.date}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.date}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {fx.convert(1, { from: \"USD\", to: \"RUB\" }).toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {fx.convert(1, { from: \"EUR\", to: \"RUB\" }).toFixed(2)}\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nexport const useRateStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 400,\n  },\n}));\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport dayjs from \"dayjs\";\nimport { apiURL, dateTemplate, defaultDateAmount } from \"../../constants\";\n\n// Thunk\nexport const fetchRateByDate = createAsyncThunk(\n  \"rate/fetchRateByDate\",\n  async (date) => {\n    const result = await fetch(\n      `${apiURL}/${date}?base=RUB&symbols=USD,EUR,RUB`\n    );\n\n    return await result.json();\n  }\n);\n\nexport const rateSlice = createSlice({\n  name: \"rates\",\n  initialState: {\n    isActivePolling: true,\n    currentDate: dayjs()\n      .subtract(defaultDateAmount - 1, \"day\")\n      .format(dateTemplate),\n    history: [],\n  },\n  // Под капотом иммер, все имутабельно\n  reducers: {\n    // Начинает поллинг\n    startPolling: (state) => {\n      state.isActivePolling = true;\n    },\n    // Останавливает поллинг\n    stopPolling: (state) => {\n      state.isActivePolling = false;\n    },\n    // Останавливает поллинг\n    togglePolling: (state) => {\n      state.isActivePolling = !state.isActivePolling;\n    },\n  },\n  extraReducers: {\n    [fetchRateByDate.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchRateByDate.fulfilled]: (state, action) => {\n      const nextDate = dayjs(state.currentDate)\n        .add(1, \"day\")\n        .format(dateTemplate);\n      state.status = \"succeeded\";\n      state.history = [\n        ...state.history,\n        { ...action.payload, date: state.currentDate },\n      ];\n      state.currentDate = nextDate;\n    },\n    [fetchRateByDate.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const { startPolling, stopPolling, togglePolling } = rateSlice.actions;\n\nexport const selectCurrentDate = (state) => state.rate.currentDate;\nexport const selectRateHistory = (state) => state.rate.history;\nexport const selectRatePolling = (state) => state.rate.isActivePolling;\n\nexport default rateSlice.reducer;\n","export const dateTemplate = \"YYYY-MM-DD\";\nexport const defaultPollingTime = 1000;\nexport const apiURL = \"https://api.exchangeratesapi.io\";\nexport const defaultDateAmount = 30;\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Chart from \"../../components/RateChart\";\nimport Table from \"../../components/RateTable\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport { useRateStyles } from \"./styles.js\";\n\nimport {\n  fetchRateByDate,\n  selectCurrentDate,\n  selectRateHistory,\n  selectRatePolling,\n  startPolling,\n  stopPolling,\n  togglePolling,\n} from \"./rateSlice\";\n\nimport { defaultPollingTime } from \"../../constants\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\n/**\n * Компонент страницы с информацией о курсах валют\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Rate() {\n  const dispatch = useDispatch();\n  const classes = useRateStyles();\n  const isActivePolling = useSelector(selectRatePolling);\n  const currentDate = useSelector(selectCurrentDate);\n  const rates = useSelector(selectRateHistory);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  // Отправляем запрос через равные промежутки времени, по флагу и следим, чтобы дата не была больше текущей\n  useEffect(() => {\n    if (isActivePolling) {\n      const interval = setInterval(() => {\n        dispatch(fetchRateByDate(currentDate));\n      }, defaultPollingTime);\n      return () => clearInterval(interval);\n    }\n  }, [dispatch, isActivePolling, currentDate]);\n  // Если дата текущая дата старше текущей, останаливаем поллинг\n  if (dayjs(currentDate).isAfter(dayjs())) {\n    dispatch(stopPolling());\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\">\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            exchangeratesapi.io\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={rates.length} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {isActivePolling && <LinearProgress />}\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart items={rates} />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4} lg={3}>\n              <Button\n                disabled={dayjs(currentDate).isAfter(dayjs())}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  dispatch(togglePolling());\n                }}\n              >\n                {isActivePolling ? \"Stop\" : \"Start\"} polling\n              </Button>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Table items={rates} />\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Rate from \"./features/rate\";\n\nfunction App() {\n  return (\n    <div>\n      <Rate />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rateReducer from \"../features/rate/rateSlice.js\";\n\n/**\n * Конфигурируем стор\n */\nexport default configureStore({\n  reducer: {\n    rate: rateReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport isSameOrBefore from \"dayjs/plugin/isSameOrBefore\";\n\ndayjs.extend(isSameOrBefore);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}